name: Linux Quick Build

on:
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        build_type: [ "release" ]
        use_cxx: [ "clang++-15" ]

    steps:
      - uses: actions/checkout@v4

#      - name: Linting FuzzyLite
#        run: make lint

      - name: Restore cmake dependencies
        id: cache-restore-cmake-deps
        uses: actions/cache/restore@v4
        with:
          path: |
            build/_deps
          key: ${{ runner.os }}-cmake-deps

      - name: Building FuzzyLite
        env:
          CXX: ${{ matrix.use_cxx }}
        run: |
          cmake -B build/ -G"Unix Makefiles" -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} -DFL_BUILD_COVERAGE=ON.
          cmake --build build/ --parallel
          ctest --test-dir build/

      - name: Coverage
        env:
          GCOV: "llvm-cov-15 gcov"
        run: |
          pip install gcovr
          make coverage

      - name: Coveralls
        if: ${{ hashFiles('build/coveralls.json') != '' }}
        uses: coverallsapp/github-action@v2
        with:
          file: build/coveralls.json

      - name: Save cmake dependencies
        if: steps.cache-restore-cmake-deps.outputs.cache-hit != 'true'
        id: cache-save-cmake-deps
        uses: actions/cache/save@v4
        with:
          path: |
            build/_deps
          key: ${{ steps.cache-restore-cmake-deps.outputs.cache-primary-key }}
