name: FuzzyLite (Linux)

on:
  pull_request:
    branches: [ "main", "development" ]
  push: 
    branches: [ "main", "development" ]
  schedule: 
    # run monthly on the first day
    - cron: "0 0 1 * *"

jobs:
  lint:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        path: 
          - check: "fuzzylite/fuzzylite"
            exclude: ""
          - check: "fuzzylite/src"
            exclude: ""
          - check: "fuzzylite/test"
            exclude: "fuzzylite/test/catch2/catch.hpp"

    steps:
    - uses: actions/checkout@v2
    - name: Run clang-format style check
      uses: jidicula/clang-format-action@v4.5.0
      with:
        clang-format-version: "13"
        check-path: ${{ matrix.path['check'] }}
        exclude-regex: ${{ matrix.path['exclude'] }}

  build:
    needs: lint
    runs-on: ubuntu-latest
    
    strategy: 
      fail-fast: false
      matrix:
        build_type: ["release", "debug"]
        use_cxx: ["clang++", "g++"]
        use_cpp98: ["OFF", "ON"]
        use_float: ["OFF", "ON"]

    steps:
    - uses: actions/checkout@v2
    
    - name: Building FuzzyLite
      working-directory: fuzzylite
      env: 
        FL_CPP98: ${{ matrix.use_cpp98 }}
        FL_USE_FLOAT: ${{ matrix.use_float }}
        CXX: ${{ matrix.use_cxx }}
        FL_BUILD_TESTS: "ON"
      run: |
        bash build.sh ${{ matrix.build_type }}